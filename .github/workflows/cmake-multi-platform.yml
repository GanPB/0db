name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Install dependencies on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt update
        sudo apt install -y \
          libgtk-4-dev \
          libgtkmm-4.0-dev \
          mm-common \
          gstreamer1.0-tools \
          libglibmm-2.4-dev \
          libgstreamer1.0-dev \
          gstreamer1.0-plugins-base \
          libgstreamer-plugins-base1.0-dev \
          gstreamer1.0-alsa \
          gstreamer1.0-pulseaudio \
          libxml-parser-perl \
          libtag1-dev \
          libsqlite3-dev

    - name: Install dependencies on Windows
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        vcpkg install gtkmm
        vcpkg install gstreamer
        vcpkg install taglib
        vcpkg install sqlite
        choco install pkgconfiglite --yes

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-${{ matrix.c_compiler }}-build
        path: ${{ steps.strings.outputs.build-output-dir }}
